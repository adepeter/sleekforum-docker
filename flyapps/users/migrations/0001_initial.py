# Generated by Django 3.0.7 on 2020-06-16 13:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import flyapps.users.managers.role
import flyapps.users.managers.user


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='e-mail')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='username')),
                ('slug', models.SlugField(blank=True, verbose_name='username slug')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='images')),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('sex', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1)),
                ('dob', models.DateField(blank=True, null=True)),
                ('about', models.TextField(blank=True, verbose_name='About me')),
                ('location', models.CharField(blank=True, max_length=75)),
                ('signature', models.TextField(blank=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('phone_number', models.PositiveIntegerField(default=0)),
                ('website', models.URLField(blank=True, default='https://')),
                ('github', models.URLField(blank=True, default='https://github.com/')),
                ('facebook', models.URLField(blank=True, default='https://facebook.com/')),
                ('twitter', models.URLField(blank=True, default='https://twitter.com/@')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email'],
            },
            managers=[
                ('objects', flyapps.users.managers.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('slug', models.SlugField(blank=True, verbose_name='slug')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.Permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name_plural': 'roles',
                'ordering': ['name'],
            },
            managers=[
                ('objects', flyapps.users.managers.role.RoleManager()),
            ],
        ),
        migrations.CreateModel(
            name='Roleship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('reason', models.TextField(blank=True, verbose_name='Reason for role')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roleships', to='users.Role', verbose_name='role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roleships', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.AddField(
            model_name='role',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='roles', through='users.Roleship', to=settings.AUTH_USER_MODEL, verbose_name='users'),
        ),
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Ban message')),
                ('expiry', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('banned_by', models.ForeignKey(limit_choices_to={'is_superuser': True}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='banned_users', to=settings.AUTH_USER_MODEL)),
                ('sections', models.ManyToManyField(related_name='bans', to='categories.Category')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='roleship',
            constraint=models.UniqueConstraint(fields=('user', 'role'), name='unique_user_role_on_roleship'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['slug'], name='index_slug_on_role'),
        ),
        migrations.AddConstraint(
            model_name='role',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_name_on_role'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['slug'], name='index_slug_on_user'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['id', 'slug'], name='index_id_slug_on_user'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email',), name='unique_email_on_user'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('username',), name='unique_username_on_user'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.UniqueConstraint(fields=('email', 'slug'), name='unique_email_slug_on_user'),
        ),
    ]
